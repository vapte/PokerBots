
11/20 - 3 hours - learned poker, set up MIT PokerBots Engine
11/21 - 4 hours - figured out sockets/packet handling
11/23 - 4 hours - learned itertools and monte carlo, implemented monte carlo

- TP 1 Deliverable -

11/25 - 2 hours - read about poker strategies 
11/29 - 2 hours - hand histories, packet parser debugging, read about implied pot odds
11/30 - 8 hours - opponent class, expected value, Player data debugging (not handling stackSizes well), wrote up aggression factor strategy

12/1 - 10 hours - installed numpy, wrote implied pot odds and implied EV, aggression frequency (AF) strategy, bot testing and packet parsing functions, live testing


- TP 2 Deliverable - 

12/2 - 7 hours - tuned AF strategy, enabled use of multiple native bots (multiprocess), automated multiprocess bot testing
result: AfExploit beats EvBasic 99% of the time

12/3 - 5 hours - attempted to do weird write/read from file with painful string manipulation. later discovered pickle.

12/4 - 10 hours - graphics: game footage

12/5 - 10 hours - game footage debugging, splash screen, hooking front end to back end, ran into major multiprocessing bug 

12/6 - 6 hours - graphics debugging, polished game footage


